{"version":3,"file":"static/js/179.98ee4e31.chunk.js","mappings":"iLAKA,MAAMA,GAASC,EAAAA,EAAAA,IAAG,yBA0DlB,EAxDyBC,KACvB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAErCC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAcC,UAClB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,gCACjCP,EAAUK,EAASG,KACrB,CAAE,MAAOC,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,GAOF,OAJAN,IAEAP,EAAOe,GAAG,gBAAiBR,GAEpB,KACLP,EAAOgB,IAAI,gBAAiBT,EAAY,CACzC,GACA,IAEH,MAAMU,EAAoBT,MAAOU,EAAaC,KAC5C,UACQT,EAAAA,EAAMU,IAAI,4CAA6C,CAAEF,cAAaC,WAE5E,MAAMV,QAAiBC,EAAAA,EAAMC,IAAI,gCACjCP,EAAUK,EAASG,KACrB,CAAE,MAAOC,GACPC,QAAQD,MAAM,+BAAgCA,GAC9CQ,MAAM,gCACR,GAGF,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACHrB,EAAOuB,OAAS,EACfvB,EAAOwB,KAAIC,IACTN,EAAAA,EAAAA,MAAA,OAA6BC,UAAU,QAAOC,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,iBAAeI,EAAMV,gBACxBI,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,SAAOI,EAAMC,SAChBP,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAQI,EAAMA,UACjBN,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,WAASI,EAAMT,WAClBM,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAAMb,EAAkBW,EAAMV,YAAa,eAAeM,SAAC,iBAC5EC,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAAMb,EAAkBW,EAAMV,YAAa,cAAcM,SAAC,gBAC3EC,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAAMb,EAAkBW,EAAMV,YAAa,QAAQM,SAAC,WAP7DI,EAAMV,gBAWlBO,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAED,C","sources":["KitchenComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:3001');\n\nconst KitchenComponent = () => {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/orders');\n        setOrders(response.data);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n\n    fetchOrders();\n\n    socket.on('order-updated', fetchOrders);\n\n    return () => {\n      socket.off('order-updated', fetchOrders);\n    };\n  }, []);\n\n  const updateOrderStatus = async (tableNumber, status) => {\n    try {\n      await axios.put('http://localhost:3001/update-order-status', { tableNumber, status });\n      // Fetch updated orders after status change\n      const response = await axios.get('http://localhost:3001/orders');\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error updating order status:', error);\n      alert('Failed to update order status');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Kitchen Orders</h1>\n      {orders.length > 0 ? (\n        orders.map(order => (\n          <div key={order.tableNumber} className=\"order\">\n            <p>Table Number: {order.tableNumber}</p>\n            <p>Name: {order.name}</p>\n            <p>Order: {order.order}</p>\n            <p>Status: {order.status}</p>\n            <button onClick={() => updateOrderStatus(order.tableNumber, 'In Progress')}>In Progress</button>\n            <button onClick={() => updateOrderStatus(order.tableNumber, 'On its way')}>On its way</button>\n            <button onClick={() => updateOrderStatus(order.tableNumber, 'Done')}>Done</button>\n          </div>\n        ))\n      ) : (\n        <p>No orders found</p>\n      )}\n    </div>\n  );\n};\n\nexport default KitchenComponent;"],"names":["socket","io","KitchenComponent","orders","setOrders","useState","useEffect","fetchOrders","async","response","axios","get","data","error","console","on","off","updateOrderStatus","tableNumber","status","put","alert","_jsxs","className","children","_jsx","length","map","order","name","onClick"],"sourceRoot":""}