{"version":3,"file":"static/js/670.7bf4a65e.chunk.js","mappings":"0LAMA,MAAMA,GAASC,EAAAA,EAAAA,IAAG,yBAuFlB,EArF4BC,KAC1B,MAAM,YAAEC,IAAgBC,EAAAA,EAAAA,KAClBC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAC5BC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,KAErDG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaC,UACjB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,sCAADC,OAAuCf,IACvEK,EAASO,EAASI,KACpB,CAAE,MAAOC,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,GAQF,OALAP,IAEAb,EAAOsB,GAAG,gBAAiBT,GAC3Bb,EAAOsB,GAAG,0BAA2BT,GAE9B,KACLb,EAAOuB,IAAI,gBAAiBV,GAC5Bb,EAAOuB,IAAI,0BAA2BV,EAAW,CAClD,GACA,CAACV,IAEJ,MAcMqB,EAAiBA,KACrBnB,EAAS,SAADa,OAAUf,GAAc,EAGlC,OAAII,GAA0B,SAAjBA,EAAMkB,QAEfC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oCAKLrB,GAA0B,aAAjBA,EAAMkB,QAUlBI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,0BAAwBzB,KAC3BI,GACCsB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,SAAOrB,EAAMuB,SAChBD,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQrB,EAAMA,UACjBsB,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,WAASrB,EAAMkB,WAClBI,EAAAA,EAAAA,MAAA,QAAME,SA3CQjB,UACpBkB,EAAEC,iBACF,UACQjB,EAAAA,EAAMkB,KAAK,iCAAkC,CAAE/B,YAAagC,SAAShC,GAAcO,mBACzF0B,MAAM,uBACNzB,EAAkB,IAClB,MAAMI,QAAiBC,EAAAA,EAAMC,IAAI,sCAADC,OAAuCf,IACvEK,EAASO,EAASI,KACpB,CAAE,MAAOC,GACPC,QAAQD,MAAM,8BAA+BA,GAC7CgB,MAAM,8BACR,GAgCoCR,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oBACPF,EAAAA,EAAAA,KAAA,SAAOW,KAAK,OAAOC,MAAO5B,EAAgB6B,SAAWP,GAAMrB,EAAkBqB,EAAEQ,OAAOF,aAExFZ,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAAQT,SAAC,oBAI1BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sCAxBLC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+BACJF,EAAAA,EAAAA,KAAA,UAAQe,QAASjB,EAAeI,SAAC,YAwB/B,C","sources":["CustomerOrderStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:3001');\n\nconst CustomerOrderStatus = () => {\n  const { tableNumber } = useParams();\n  const navigate = useNavigate();\n  const [order, setOrder] = useState(null);\n  const [additionalFood, setAdditionalFood] = useState('');\n\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/order-status/${tableNumber}`);\n        setOrder(response.data);\n      } catch (error) {\n        console.error('Error fetching order:', error);\n      }\n    };\n\n    fetchOrder();\n\n    socket.on('order-updated', fetchOrder);\n    socket.on('completed-order-updated', fetchOrder);\n\n    return () => {\n      socket.off('order-updated', fetchOrder);\n      socket.off('completed-order-updated', fetchOrder);\n    };\n  }, [tableNumber]);\n\n  const handleAddFood = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:3001/add-food', { tableNumber: parseInt(tableNumber), additionalFood });\n      alert('Food added to order');\n      setAdditionalFood('');\n      const response = await axios.get(`http://localhost:3001/order-status/${tableNumber}`);\n      setOrder(response.data);\n    } catch (error) {\n      console.error('Error adding food to order:', error);\n      alert('Failed to add food to order');\n    }\n  };\n\n  const handleNewOrder = () => {\n    navigate(`/form/${tableNumber}`);\n  };\n\n  if (order && order.status === 'Done') {\n    return (\n      <div className=\"container\">\n        <h1>Thank you for dining with us!</h1>\n      </div>\n    );\n  }\n\n  if (!order || order.status === 'No Order') {\n    return (\n      <div className=\"container\">\n        <h1>Welcome to my restaurant!</h1>\n        <button onClick={handleNewOrder}>Order</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Order Status for Table {tableNumber}</h1>\n      {order ? (\n        <div>\n          <p>Name: {order.name}</p>\n          <p>Order: {order.order}</p>\n          <p>Status: {order.status}</p>\n          <form onSubmit={handleAddFood}>\n            <div className=\"form-group\">\n              <label>Add More Food:</label>\n              <input type=\"text\" value={additionalFood} onChange={(e) => setAdditionalFood(e.target.value)} />\n            </div>\n            <button type=\"submit\">Add Food</button>\n          </form>\n        </div>\n      ) : (\n        <p>No order found for this table</p>\n      )}\n    </div>\n  );\n};\n\nexport default CustomerOrderStatus;"],"names":["socket","io","CustomerOrderStatus","tableNumber","useParams","navigate","useNavigate","order","setOrder","useState","additionalFood","setAdditionalFood","useEffect","fetchOrder","async","response","axios","get","concat","data","error","console","on","off","handleNewOrder","status","_jsx","className","children","_jsxs","name","onSubmit","e","preventDefault","post","parseInt","alert","type","value","onChange","target","onClick"],"sourceRoot":""}